<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 随笔</title><link>https://yuguo.im/tags/linux/</link><description>Recent content in Linux on 随笔</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 26 Mar 2020 07:47:50 +0800</lastBuildDate><atom:link href="https://yuguo.im/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>10 个 Linux netstat 命令实战</title><link>https://yuguo.im/post/2020/03/linux-netstat-command-examples/</link><pubDate>Thu, 26 Mar 2020 07:47:50 +0800</pubDate><guid>https://yuguo.im/post/2020/03/linux-netstat-command-examples/</guid><description>作者：Silver Moon
原文网址：https://www.binarytides.com/linux-netstat-command-examples/
Netstat Netstat 是一个命令行实用程序，可用于列出系统上的所有网络（socket）连接。它列出了所有的 tcp，udp socket 连接和 unix socket 连接。
除了已连接的套接字外，它还可以列出正在等待传入连接的侦听套接字。因此，通过验证开放端口 80，可以确认 Web 服务器是否在系统上运行。这使得它成为网络和系统管理员非常有用的工具。
在本教程中，我们将查证一些示例，说明如何使用 netstat 查找有关网络连接和系统上开放端口的信息。
这是手册（man pages）中对 netstat 的简介
netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships 1. 列出所有连接 第一个也是最简单的命令是列出所有当前连接。只需使用 a 选项运行 netstat 命令。
$ netstat -a Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 enlightened:domain *:* LISTEN tcp 0 0 localhost:ipp *:* LISTEN tcp 0 0 enlightened.</description></item><item><title>14 个重要的 Linux ps 命令实战</title><link>https://yuguo.im/post/2020/03/linux-ps-command-examples/</link><pubDate>Tue, 24 Mar 2020 08:01:37 +0800</pubDate><guid>https://yuguo.im/post/2020/03/linux-ps-command-examples/</guid><description>作者：Pungki Arianto
原文网址：https://linoxide.com/how-tos/linux-ps-command-examples/
Linux ps 命令是用于捕获系统上当前进程的内置工具。它将一次捕获系统状况。如果您想实时进行刷新，可以使用 top 命令。
在本教程中，我将向您展示 ps 命令的常见实际示例，该示例有助于您的日常linux系统管理。
1. 不带任何选项运行 ps 这是非常基本的 ps 用法。只需在控制台上键入 ps 即可查看其结果。
root@ParkW:~# ps PID TTY TIME CMD 28269 pts/1 00:00:00 bash 28307 pts/1 00:00:00 ps 默认情况下，它将向我们显示 4 列信息。
PID 是运行命令（CMD）的进程 ID TTY 是运行命令的地方 TIME 是运行命令时 CPU 使用了多少时间 CMD 是进程运行的命令 这里的信息展示是无序的。
2. 显示当前所有进程 为此，我们可以使用 -a 选项。我们可以猜到, -a 是 all 的简写。选项 x 将显示所有进程，即使当前进程也未与任何TTY（终端）相关联
$ ps -ax 该结果可能会比较多。为了使其更易于阅读，请将其与 less 命令结合使用。
$ ps -ax | less PID TTY STAT TIME COMMAND 1 ?</description></item><item><title>Difference Between The 'history' Command and 'cat ~/.bash_history'</title><link>https://yuguo.im/post/2019/07/history-and-history-file/</link><pubDate>Fri, 05 Jul 2019 20:35:16 +0800</pubDate><guid>https://yuguo.im/post/2019/07/history-and-history-file/</guid><description>寻找这个问题的答案时，无意间看到1999年的一段对话，完美的解释了我的疑问。通过操作验证，David 说的 100% 正确。 如果别人问起我这个问题，我也会以他的原话来回答，因为我找不到比他回答得更完美的答案了。
History for your current shell is retained in RAM. It is appended to .bash_history (subject to the length you define for that file) when you exit the shell. Therefore, cat ~/.bash_history will always be as current as the LAST shell you ran, and its last entry should be &amp;ldquo;exit&amp;rdquo;.
Commands run in the current shell won&amp;rsquo;t appear there yet.
History for your current shell is retained in RAM.</description></item><item><title>History Usage</title><link>https://yuguo.im/post/2019/07/history-usage/</link><pubDate>Thu, 04 Jul 2019 22:28:57 +0800</pubDate><guid>https://yuguo.im/post/2019/07/history-usage/</guid><description>history 命令用于显示指定数目的指令命令，读取历史命令文件中的目录到历史命令缓冲区和将历史命令缓冲区中的目录写入命令文件。
该命令单独使用时，仅显示历史命令，在命令行中，可以使用符号!执行指定序号的历史命令。例如，要执行第2个历史命令，则输入 !2。
历史命令是被保存在内存中的，当退出或者登录shell时，会自动保存或读取。在内存中，历史命令仅能够存储1000条历史命令，该数量是由环境变量HISTSIZE进行控制。
语法 history(选项)(参数) 选项 -c：清空当前历史命令； -a：将历史命令缓冲区中命令写入历史命令文件中； -r：将历史命令文件中的命令读入当前历史命令缓冲区； -w：将当前历史命令缓冲区命令写入历史命令文件中。 参数 n：打印最近的n条历史命令。 实例 使用history命令显示最近使用的10条历史命令，输入如下命令：
[root@localhost ~]# history 10 92 ls 93 cd .. 94 ls 95 exit 96 ls -a 97 cd .ssh/ 98 ls 99 cat known_hosts 100 exit 101 history 10 其他特殊技巧 使用 HISTTIMEFORMAT 显示时间戳 export HISTTIMEFORMAT='%F %T ' 注意：这个功能只能用在当 HISTTIMEFORMAT 这个环境变量被设置之后，之后的那些新执行的 bash 命令才会被打上正确的时间戳。在此之前的所有命令，都将会显示成设置 HISTTIMEFORMAT 变量的时间。可以在 .bash_profile 中把这条设置指令添加进去，后面就可以一直使用了。
使用 Ctrl + R 查询历史记录 动手试试，超级便利。</description></item><item><title>Linux Shell Shortcut</title><link>https://yuguo.im/post/2019/linux-shell-shortcut/</link><pubDate>Sun, 30 Jun 2019 22:49:57 +0800</pubDate><guid>https://yuguo.im/post/2019/linux-shell-shortcut/</guid><description>作为一名键盘控，提升十倍效率的快捷键。
Ctrl + U – 剪切光标前的内容 Ctrl + K – 剪切光标至行末的内容 Ctrl + Y – 粘贴 Ctrl + E – 移动光标到行末 (End) Ctrl + A – 移动光标到行首(Ahead) ALT + F – 跳向下一个空格 (Front) ALT + B – 跳回上一个空格 (Back) ALT + Backspace – 删除前一个单词 Ctrl + W – 剪切光标前一个单词 (Word) Ctrl + Insert – 复制 Shift + Insert – 粘贴 更多Linux常用快捷键及命令总结参见这里</description></item><item><title>wkhtmltopdf 中文显示有误, 显示“口”方框的解决方案</title><link>https://yuguo.im/post/2018/wkhtmltopdf-zh-display-error/</link><pubDate>Mon, 15 Oct 2018 17:54:24 +0000</pubDate><guid>https://yuguo.im/post/2018/wkhtmltopdf-zh-display-error/</guid><description>运行环境 Ubuntu 14.04.2 LTS wkhtmltopdf 0.9.9 test.html 测试文件的编码为 UTF-8，文件内部标记编码也是UTF-8，如下所示： &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot;&amp;gt; 执行过程 $ wkhtmltopdf test.html test.pdf Loading page (1/2) Printing pages (2/2) Done 检查转化后的 pdf 文件，中文显示有问题
解决方案 在 Windows 目录( C:\WINDOWS\Fonts\ )中找到文件 simsun.ttc 大概 17M 左右 拷贝至 /usr/share/fonts/chinese/TrueType/simsun.ttc，如果目录 chinese/TrueType 不存在，则手动创建 加载缓存 fc-cache -fv 再次执行 wkhtmltopdf test.html test.pdf 检查显示，完美。 有些博客中会建议拷贝 *.ttf 之类的文件，目前我没有亲测通过，暂不加入此。</description></item><item><title>阿里云ECS无法访问</title><link>https://yuguo.im/post/2018/05/aliyun-ecs-connect-error/</link><pubDate>Wed, 23 May 2018 21:32:30 +0800</pubDate><guid>https://yuguo.im/post/2018/05/aliyun-ecs-connect-error/</guid><description>今天有一朋友让我帮忙看下他的云服务器，他说服务器无法远程访问，即使重启了也不行。说来挺惭愧，我也搞了半天没查出来问题在哪！于是我帮他申请工单，没想到阿里云工程师反馈很快，给了他最大权限，三下五除二，问题被解决了。
工程师 XXXXX 号: 因为您服务器的网络是专有网络，专有网络服务器的 公网ip 是通过 nat 映射到 内网网卡的，所以您服务器内是无法直接监听 公网ip 的。还请您知晓，谢谢 服务器sshd服务无法启动，报错: error: Bind to port 22 on 101.132.36.203 failed: Cannot assign requested address. fatal: Cannot bind any address. 其实他说的这个原因，我也查到了，但是我误解了assign的意思。assign 此处的含义是“指定”, 而不是“分配”。
解决方案: 编辑 /etc/ssh/sshd_config 注释 #ListenAddress 101.132.36.203</description></item></channel></rss>